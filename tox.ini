[tox]
envlist =
    py39-lint,
    py310-lint,
    py311-lint,
    py312-lint,
    format,    
    py{39,310,311,312}-Plone{60},
    coverage-report,

skip_missing_interpreters = True


[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312


[gh-actions:env]
PLONE-VERSION =
    Plone60: Plone60


[testenv]
skip_install = true
allowlist_externals =
    echo
    false
# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.
# See https://github.com/tox-dev/tox/issues/2858.
commands =
    echo "Unrecognized environment name {envname}"
    false

[testenv:coverage-report]
deps =
    coverage
    zope.testrunner
    -c https://dist.plone.org/release/6.0-dev/constraints.txt

commands =
    rfbrowser init
    coverage run --branch --source my.addon {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir}/src -s my.addon {posargs}
    coverage report -m --format markdown
    coverage xml
    coverage html

extras =
    test


[testenv:py39-coverage-report]
basepython = python3.9
use_develop = true
set_env = 
    ROBOT_BROWSER=headlesschrome
    COVERAGE_FILE=.coverage.{envname}
skip_install = false
constrain_package_deps = true
deps = {[coverage-report]deps}
commands = {[coverage-report]commands}
extras = {[coverage-report]extras}

[testenv:py310-coverage-report]
basepython = python3.10
use_develop = true
set_env = 
    ROBOT_BROWSER=headlesschrome
    COVERAGE_FILE=.coverage.{envname}
skip_install = false
constrain_package_deps = true
deps = {[coverage-report]deps}
commands = {[coverage-report]commands}
extras = {[coverage-report]extras}

[testenv:py311-coverage-report]
basepython = python3.11
use_develop = true
set_env = 
    ROBOT_BROWSER=headlesschrome
    COVERAGE_FILE=.coverage.{envname}
skip_install = false
constrain_package_deps = true
deps = {[coverage-report]deps}
commands = {[coverage-report]commands}
extras = {[coverage-report]extras}

[testenv:py312-coverage-report]
basepython = python3.12
use_develop = true
set_env = 
    ROBOT_BROWSER=headlesschrome
    COVERAGE_FILE=.coverage.{envname}
skip_install = false
constrain_package_deps = true
deps = {[coverage-report]deps}
commands = {[coverage-report]commands}
extras = {[coverage-report]extras}


[testenv:init]
description = Prepare environment
skip_install = true
commands =
    echo "Initial setup complete"

[testenv:format]
basepython = python3.11
description = automatically reformat code
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run -a pyupgrade
    pre-commit run -a isort
    pre-commit run -a black
    pre-commit run -a zpretty

[testenv:lint]
description = run linters that will help improve the code style
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run -a

[testenv:py39-lint]
basepython = python3.9
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}

[testenv:py310-lint]
basepython = python3.10
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}

[testenv:py311-lint]
basepython = python3.11
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}

[testenv:py312-lint]
basepython = python3.12
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}